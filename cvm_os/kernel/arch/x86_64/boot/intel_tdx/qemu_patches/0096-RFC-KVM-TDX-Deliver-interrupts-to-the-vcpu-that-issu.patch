From 10988f72b79b007504810ff02076d0190c22cd86 Mon Sep 17 00:00:00 2001
From: Isaku Yamahata <isaku.yamahata@intel.com>
Date: Tue, 16 Aug 2022 11:12:34 -0700
Subject: [PATCH 96/99] RFC: KVM: TDX: Deliver interrupts to the vcpu that
 issued SetupEventNotifyInterrupt

RFC: Currently the discussion is on-going.  The GHCI spec would be updated.

The current behaviour is that qemu delivers interrupts to the vcpu that
issued TDG.VP.VMCALL<GetQuote>.  Instead deliver interrupts that issued
TDG.VP.VMCALL<SetupEventNotifyInterrupt> for cpu affinity.

Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
---
 target/i386/kvm/tdx.c | 9 ++++++---
 target/i386/kvm/tdx.h | 1 +
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/target/i386/kvm/tdx.c b/target/i386/kvm/tdx.c
index de1017059f..7b97da358e 100644
--- a/target/i386/kvm/tdx.c
+++ b/target/i386/kvm/tdx.c
@@ -668,6 +668,7 @@ static void tdx_guest_init(Object *obj)
                             tdx_guest_set_quote_generation);
 
     tdx->event_notify_interrupt = -1;
+    tdx->apic_id = -1;
 }
 
 static void tdx_guest_finalize(Object *obj)
@@ -1047,7 +1048,7 @@ static void tdx_handle_get_quote(X86CPU *cpu, struct kvm_tdx_vmcall *vmcall)
     ioc = qio_channel_socket_new();
 
     t = g_malloc(sizeof(*t));
-    t->apic_id = cpu->apic_id;
+    t->apic_id = tdx->apic_id;
     t->gpa = gpa;
     t->buf_len = buf_len;
     t->hdr = hdr;
@@ -1077,7 +1078,8 @@ static void tdx_handle_get_quote(X86CPU *cpu, struct kvm_tdx_vmcall *vmcall)
     vmcall->status_code = TDG_VP_VMCALL_SUCCESS;
 }
 
-static void tdx_handle_setup_event_notify_interrupt(struct kvm_tdx_vmcall *vmcall)
+static void tdx_handle_setup_event_notify_interrupt(
+    X86CPU *cpu, struct kvm_tdx_vmcall *vmcall)
 {
     MachineState *ms = MACHINE(qdev_get_machine());
     TdxGuest *tdx = TDX_GUEST(ms->cgs);
@@ -1086,6 +1088,7 @@ static void tdx_handle_setup_event_notify_interrupt(struct kvm_tdx_vmcall *vmcal
     if (32 <= event_notify_interrupt && event_notify_interrupt <= 255) {
         qemu_mutex_lock(&tdx->lock);
         tdx->event_notify_interrupt = event_notify_interrupt;
+        tdx->apic_id = cpu->apic_id;
         qemu_mutex_unlock(&tdx->lock);
         vmcall->status_code = TDG_VP_VMCALL_SUCCESS;
     }
@@ -1110,7 +1113,7 @@ static void tdx_handle_vmcall(X86CPU *cpu, struct kvm_tdx_vmcall *vmcall)
         tdx_handle_get_quote(cpu, vmcall);
         break;
     case TDG_VP_VMCALL_SETUP_EVENT_NOTIFY_INTERRUPT:
-        tdx_handle_setup_event_notify_interrupt(vmcall);
+        tdx_handle_setup_event_notify_interrupt(cpu, vmcall);
         break;
     default:
         warn_report("unknown tdg.vp.vmcall type 0x%llx subfunction 0x%llx",
diff --git a/target/i386/kvm/tdx.h b/target/i386/kvm/tdx.h
index a50969d892..272fc69a71 100644
--- a/target/i386/kvm/tdx.h
+++ b/target/i386/kvm/tdx.h
@@ -47,6 +47,7 @@ typedef struct TdxGuest {
 
     /* runtime state */
     int event_notify_interrupt;
+    uint32_t apic_id;
 
     /* GetQuote */
     int quote_generation_num;
-- 
2.31.1

