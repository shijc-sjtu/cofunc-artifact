From 25d912f52362ecb07ec2da6b67f8c0814dd1932b Mon Sep 17 00:00:00 2001
From: Xiaoyao Li <xiaoyao.li@intel.com>
Date: Wed, 23 Feb 2022 22:10:42 +0800
Subject: [PATCH 52/99] [REVERTME] i386/tdx: workaround for KVM vm_type ABI
 change

KVM vm_type ABI was changed so that KVM_X86_TDX_VM is now 1, it was 2.
To keep qemu works with the both ABI, add workaround the ABI change.
Try KVM_X86_TDX_VM=1, and then 2 if it fails.

Signed-off-by: Xiaoyao Li <xiaoyao.li@intel.com>
---
 target/i386/kvm/kvm.c | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/target/i386/kvm/kvm.c b/target/i386/kvm/kvm.c
index f55bd3d060..acd9476832 100644
--- a/target/i386/kvm/kvm.c
+++ b/target/i386/kvm/kvm.c
@@ -150,6 +150,14 @@ static const char* vm_type_name[] = {
     [KVM_X86_TDX_VM] = "X86_TDX_VM",
 };
 
+/*
+ * REVERTME: KVM_X86_TDX_VM was changed from 2 to 1.
+ * Workaround to make qemu work with old value KVM_X86_TDX_VM 2 for ABI
+ * compatibility.
+ * Once the actual value is fixed for upstreaming, remove this workaround.
+ */
+#define KVM_X86_TDX_VM_OLD  2
+
 int kvm_get_vm_type(MachineState *ms, const char *vm_type)
 {
     int kvm_type = KVM_X86_DEFAULT_VM;
@@ -167,8 +175,17 @@ int kvm_get_vm_type(MachineState *ms, const char *vm_type)
     }
 
     if (!(kvm_check_extension(KVM_STATE(ms->accelerator), KVM_CAP_VM_TYPES) & BIT(kvm_type))) {
-        error_report("vm-type %s not supported by KVM", vm_type_name[kvm_type]);
-        exit(1);
+        if (kvm_type == KVM_X86_TDX_VM) {
+            kvm_type = KVM_X86_TDX_VM_OLD;
+            if (!(kvm_check_extension(KVM_STATE(ms->accelerator), KVM_CAP_VM_TYPES) & BIT(kvm_type))) {
+                error_report("vm-type %s not supported by KVM", vm_type_name[KVM_X86_TDX_VM]);
+                exit(1);
+            }
+        } else {
+            error_report("vm-type %s not supported by KVM", vm_type_name[kvm_type]);
+            exit(1);
+
+        }
     }
 
     return kvm_type;
-- 
2.31.1

