From 95a8b3d5d9c8acc8bc3db1fef370af6e61bc2806 Mon Sep 17 00:00:00 2001
From: Yuan Yao <yuan.yao@intel.com>
Date: Thu, 12 May 2022 14:21:18 +0800
Subject: [PATCH 90/99] i386/kvm: Enable get GPR/CR/SEG/DR for INTEL TDX guest

CR and SEG registers are necessary to read/write
INTEL TDX guest's virtual address.

Signed-off-by: Yao Yuan <yuan.yao@intel.com>
---
 target/i386/kvm/kvm.c | 37 ++++++++++++++++++++++++++++++++++---
 1 file changed, 34 insertions(+), 3 deletions(-)

diff --git a/target/i386/kvm/kvm.c b/target/i386/kvm/kvm.c
index 190073ad4b..658d1fb298 100644
--- a/target/i386/kvm/kvm.c
+++ b/target/i386/kvm/kvm.c
@@ -30,7 +30,7 @@
 #include "sysemu/runstate.h"
 #include "kvm_i386.h"
 #include "sev.h"
-#include "tdx.h"
+#include "sysemu/tdx.h"
 #include "hyperv.h"
 #include "hyperv-proto.h"
 
@@ -4764,6 +4764,38 @@ int kvm_arch_put_registers(CPUState *cpu, int level)
     return 0;
 }
 
+static int kvm_arch_tdx_get_registers(CPUState *cs)
+{
+    X86CPU *cpu = X86_CPU(cs);
+    int ret;
+
+    if (!tdx_debug_enabled())
+        return 0;
+
+    ret = kvm_getput_regs(cpu, 0);
+    if (ret < 0) {
+        goto out;
+    }
+
+    ret = kvm_get_xcrs(cpu);
+    if (ret < 0) {
+        goto out;
+    }
+
+    ret = has_sregs2 ? kvm_get_sregs2(cpu) : kvm_get_sregs(cpu);
+    if (ret < 0) {
+        goto out;
+    }
+
+    ret = kvm_get_debugregs(cpu);
+    if (ret < 0) {
+        goto out;
+    }
+
+out:
+    return ret;
+}
+
 int kvm_arch_get_registers(CPUState *cs)
 {
     X86CPU *cpu = X86_CPU(cs);
@@ -4784,9 +4816,8 @@ int kvm_arch_get_registers(CPUState *cs)
         goto out;
     }
 
-    /* TODO: Allow accessing guest state for debug TDs. */
     if (is_tdx_vm()) {
-        return 0;
+        return kvm_arch_tdx_get_registers(cs);
     }
 
     ret = kvm_getput_regs(cpu, 0);
-- 
2.31.1

