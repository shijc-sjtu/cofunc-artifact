From 202e2f5952472f63bd7abd2dc13a10b6dd6fa2a5 Mon Sep 17 00:00:00 2001
From: Xiaoyao Li <xiaoyao.li@intel.com>
Date: Sat, 2 Apr 2022 17:19:55 +0800
Subject: [PATCH 54/99] [REVERTME] i386/tdvf: Make it work with old TDVF

1. hardcode the TDX metadata offset if no GUID found;
2. No GUID found means old TDVF and make HOB creation work for old version;

Signed-off-by: Xiaoyao Li <xiaoyao.li@intel.com>
---
 hw/i386/tdvf-hob.c     | 14 ++++++++++++++
 hw/i386/tdvf.c         | 18 ++++++++++++++----
 include/hw/i386/tdvf.h |  3 +++
 3 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/hw/i386/tdvf-hob.c b/hw/i386/tdvf-hob.c
index bdf3b48233..1acd97c59c 100644
--- a/hw/i386/tdvf-hob.c
+++ b/hw/i386/tdvf-hob.c
@@ -87,6 +87,20 @@ static void tdvf_hob_add_memory_resources(TdxGuest *tdx, TdvfHob *hob)
             exit(1);
         }
 
+        /* REVERTME: workaround for the old version of TDVF expectations. */
+        if (!tdx->tdvf.guid_found) {
+            switch (e->type) {
+            case TDX_RAM_UNACCEPTED:
+                resource_type = EFI_RESOURCE_SYSTEM_MEMORY;
+                break;
+            case TDX_RAM_ADDED:
+                resource_type = EFI_RESOURCE_MEMORY_RESERVED;
+                break;
+            default:
+                break;
+            }
+        }
+
         region = tdvf_get_area(hob, sizeof(*region));
         *region = (EFI_HOB_RESOURCE_DESCRIPTOR) {
             .Header = {
diff --git a/hw/i386/tdvf.c b/hw/i386/tdvf.c
index dca209098f..e843edadbf 100644
--- a/hw/i386/tdvf.c
+++ b/hw/i386/tdvf.c
@@ -49,7 +49,7 @@ struct tdx_metadata_offset {
     uint32_t offset;
 };
 
-static TdvfMetadata *tdvf_get_metadata(void *flash_ptr, int size)
+static TdvfMetadata *tdvf_get_metadata(TdxFirmware *fw, void *flash_ptr, int size)
 {
     TdvfMetadata *metadata;
     uint32_t offset = 0;
@@ -60,14 +60,24 @@ static TdvfMetadata *tdvf_get_metadata(void *flash_ptr, int size)
     }
 
     if (pc_system_ovmf_table_find(TDX_METADATA_OFFSET_GUID, &data, NULL)) {
-        offset = size - le32_to_cpu(((struct tdx_metadata_offset *)data)->offset);
+        fw->guid_found = true;
 
+        offset = size - le32_to_cpu(((struct tdx_metadata_offset *)data)->offset);
         if (offset + sizeof(*metadata) > size) {
             return NULL;
         }
     } else {
         error_report("Cannot find TDX_METADATA_OFFSET_GUID");
-        return NULL;
+        fw->guid_found = false;
+
+#define TDVF_METDATA_OFFSET_FROM_END 0x20
+        offset = size - TDVF_METDATA_OFFSET_FROM_END;
+        uint32_t *metadata_offset = (uint32_t *)(flash_ptr + offset);
+        offset = le32_to_cpu(*metadata_offset);
+
+        if (offset + sizeof(*metadata) > size) {
+            return NULL;
+        }
     }
 
     metadata = flash_ptr + offset;
@@ -152,7 +162,7 @@ int tdvf_parse_metadata(TdxFirmware *fw, void *flash_ptr, int size)
     ssize_t entries_size;
     uint32_t len, i;
 
-    metadata = tdvf_get_metadata(flash_ptr, size);
+    metadata = tdvf_get_metadata(fw, flash_ptr, size);
     if (!metadata) {
         return -EINVAL;
     }
diff --git a/include/hw/i386/tdvf.h b/include/hw/i386/tdvf.h
index d880af245a..71b184b048 100644
--- a/include/hw/i386/tdvf.h
+++ b/include/hw/i386/tdvf.h
@@ -48,6 +48,9 @@ typedef struct TdxFirmware {
 
     uint32_t nr_entries;
     TdxFirmwareEntry *entries;
+
+    /* For compatibility */
+    bool guid_found;
 } TdxFirmware;
 
 #define for_each_tdx_fw_entry(fw, e)    \
-- 
2.31.1

