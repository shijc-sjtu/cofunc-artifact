From 2c10665273c19c986c2b1bfaddc7447187412458 Mon Sep 17 00:00:00 2001
From: Isaku Yamahata <isaku.yamahata@intel.com>
Date: Tue, 24 May 2022 01:51:27 -0700
Subject: [PATCH 50/99] tdx/get_quote: return error if the returned data is too
 large

Qemu handles getquote request from TD.  Qemu sends input data in shared GPA
to quote generating service(QGS), receives data from QGS, and stores it
in shared GPA.  If returned data is too large to fit in shared GPA, return
error and store the returned data size in the header of shared GPA.

Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
---
 target/i386/kvm/tdx.c | 32 +++++++++++++++++++++++++++++---
 1 file changed, 29 insertions(+), 3 deletions(-)

diff --git a/target/i386/kvm/tdx.c b/target/i386/kvm/tdx.c
index eed3075e90..b3412280cb 100644
--- a/target/i386/kvm/tdx.c
+++ b/target/i386/kvm/tdx.c
@@ -800,9 +800,23 @@ static void tdx_handle_get_quote_connected(QIOTask *task, gpointer opaque)
     out_data = g_malloc(t->buf_len);
     out_len = 0;
     size = 0;
-    while (out_len < t->buf_len) {
-        size = qio_channel_read(
-            QIO_CHANNEL(t->ioc), out_data + out_len, t->buf_len - out_len, &err);
+    while (true) {
+        char *buf;
+        size_t buf_size;
+
+        if (out_len < t->buf_len) {
+            buf = out_data + out_len;
+            buf_size = t->buf_len - out_len;
+        } else {
+            /*
+             * The received data is too large to fit in the shared GPA.
+             * Discard the received data and try to know the data size.
+             */
+            buf = out_data;
+            buf_size = t->buf_len;
+        }
+
+        size = qio_channel_read(QIO_CHANNEL(t->ioc), buf, buf_size, &err);
         if (err) {
             break;
         }
@@ -819,6 +833,17 @@ static void tdx_handle_get_quote_connected(QIOTask *task, gpointer opaque)
         t->hdr.error_code = cpu_to_le64(TDX_VP_GET_QUOTE_QGS_UNAVAILABLE);
         goto error;
     }
+    if (out_len > 0 && out_len > t->buf_len) {
+        /*
+         * There is no specific error code defined for this case(E2BIG) at the
+         * moment.
+         * TODO: Once an error code for this case is defined in GHCI spec ,
+         * update the error code.
+         */
+        t->hdr.error_code = cpu_to_le64(TDX_VP_GET_QUOTE_ERROR);
+        t->hdr.out_len = cpu_to_le32(out_len);
+        goto error_hdr;
+    }
 
     if (address_space_write(
             &address_space_memory, t->gpa + sizeof(t->hdr),
@@ -836,6 +861,7 @@ error:
     if (t->hdr.error_code != cpu_to_le64(TDX_VP_GET_QUOTE_SUCCESS)) {
         t->hdr.out_len = cpu_to_le32(0);
     }
+error_hdr:
     if (address_space_write(
             &address_space_memory, t->gpa,
             MEMTXATTRS_UNSPECIFIED, &t->hdr, sizeof(t->hdr)) != MEMTX_OK) {
-- 
2.31.1

